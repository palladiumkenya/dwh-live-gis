// <auto-generated />
using System;
using LiveDWAPI.Infrastructure.Immunization;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LiveDWAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ImmunizationContext))]
    partial class ImmunizationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LiveDWAPI.Domain.Immunization.DimAgeGroup", b =>
                {
                    b.Property<string>("AgeGroup")
                        .HasColumnType("text")
                        .HasColumnName("age_group");

                    b.ToTable((string)null);

                    b.ToView("v_age_group", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Immunization.DimRegion", b =>
                {
                    b.Property<string>("FacilityName")
                        .HasColumnType("text")
                        .HasColumnName("facility_name");

                    b.ToTable((string)null);

                    b.ToView("v_region_facility", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Immunization.DimSex", b =>
                {
                    b.Property<string>("Sex")
                        .HasColumnType("text")
                        .HasColumnName("sex");

                    b.ToTable((string)null);

                    b.ToView("v_sex", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Immunization.DimVaccine", b =>
                {
                    b.Property<string>("VaccineName")
                        .HasColumnType("text")
                        .HasColumnName("vaccine_name");

                    b.ToTable((string)null);

                    b.ToView("v_vaccine", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Immunization.FactAggregateVaccination", b =>
                {
                    b.Property<string>("AgeGroup")
                        .HasColumnType("text")
                        .HasColumnName("age_group_category");

                    b.Property<DateTime?>("AssessmentPeriod")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("period");

                    b.Property<string>("FacilityName")
                        .HasColumnType("text")
                        .HasColumnName("facility_name");

                    b.Property<string>("Latitude")
                        .HasColumnType("text")
                        .HasColumnName("latitude");

                    b.Property<string>("Longitude")
                        .HasColumnType("text")
                        .HasColumnName("longitude");

                    b.Property<int?>("Numerator")
                        .HasColumnType("integer")
                        .HasColumnName("metric");

                    b.Property<string>("Sex")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("Vaccine")
                        .HasColumnType("text")
                        .HasColumnName("vaccine_name");

                    b.ToTable("aggregate_combined_indicators", "universal_semantic_layer", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
